@mixin light-theme {
  --background: #fafbfc;
  --background-shade: #fafbfc;
  --borders: #e5e5e5;
  --text: #565869;
  --text-shade: #a8a8a8;

  --selected-background: #fafafb;
  --selected-text: #565869;
}

@mixin dark-theme {
  --background: #222732;
  --background-shade: #222732;
  --borders: #161c26;
  --text: #9ba0af;
  --text-shade: #606573;

  --selected-background: #38414c;
  --selected-text: #c0c4d0;
}

@mixin light() {
  @media (prefers-color-scheme: light) {
    @at-root :root:not([data-theme='light']):not([data-theme='dark']) #{&} {
      @content;
    }
  }
  @at-root :root[data-theme='light'] #{&} {
    @content;
  }
}

@mixin dark() {
  @media (prefers-color-scheme: dark) {
    @at-root :root:not([data-theme='light']):not([data-theme='dark']) #{&} {
      @content;
    }
  }
  @at-root :root[data-theme='dark'] #{&} {
    @content;
  }
}

@include light {
  @include light-theme;
}

@include dark {
  @include dark-theme;
}

html {
  height: calc(var(--vh, 1vh) * 100);
}

html,
body {
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial,
    sans-serif, Apple Color Emoji, Segoe UI Emoji;
  font-weight: 400;
  color: var(--text);
  background-color: var(--background);
}

.seamless {
  font-family: inherit;
  font-weight: inherit;
  font-size: inherit;
  font-style: inherit;
  line-height: inherit;
  padding: 0;
  margin: 0;
  display: inline-block;
  vertical-align: inherit;
  background: none;
  border: none;
  outline: none;
}

.subtle {
  opacity: 0.4;
}

.wrapper {
  height: 100vh;
  display: grid;
  grid-template-rows: max-content 1fr 1fr max-content;
  grid-template-columns: 1fr;
  grid-template-areas:
    'header'
    'input'
    'output'
    'footer';

  @media (min-width: 1024px) {
    grid-template-rows: max-content 1fr max-content;
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
      'header header'
      'input output'
      'footer footer';
  }
}

.options input,
.options select {
  position: absolute;
}

.options {
  white-space: nowrap;
  overflow: hidden;
  border-bottom: 1px solid var(--borders);
  background-color: var(--background-shade);
  box-shadow: 0 0 2px rgba(74, 82, 104, 0.1);
  z-index: 20;
  font-size: 0;
  grid-area: header;
  display: flex;
}

.options > span {
  position: relative;
  flex-grow: 1;
  border-left: 1px solid var(--borders);
  display: inline-flex;
  font-size: 1rem;
}

.options > span.hidden {
  display: none;
}

.options select {
  width: 100%;
  height: 100%;
  opacity: 0;
  cursor: pointer;
}

.options select + label {
  pointer-events: none;
}

.option-button,
.options label {
  padding: 0.6em 1em;
  cursor: pointer;
  flex-grow: 1;
  position: relative;
  z-index: 1;
  border: none;
  color: inherit;
  background: var(--background);
  user-select: none;
}

.options label::before {
  width: 1.2em;
  height: 1.2em;
  margin-bottom: -0.2em;
  display: inline-block;
  margin-right: 0.4em;
  background-size: contain;
}

#switch-theme-container {
  flex-grow: 0;
  flex-shrink: 0;
  width: 39px;
  border-left: none;
}

#switch-theme {
  padding-left: 0.5em;
  padding-right: 0.5em;
  outline: none;

  > svg {
    display: none;
  }
}

:root[data-theme='auto'] #theme-auto,
:root[data-theme='light'] #theme-light,
:root[data-theme='dark'] #theme-dark {
  display: block;
}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

@mixin themed-background-svg(
  $svg,
  $light-color: '4a5263',
  $dark-color: '606573'
) {
  $light-svg: str-replace($svg, 'currentColor', '%23#{$light-color}');
  $dark-svg: str-replace($svg, 'currentColor', '%23#{$dark-color}');

  :root[data-theme='light'] & {
    background-image: url('data:image/svg+xml;charset=utf-8,#{$light-svg}');
  }

  @media (prefers-color-scheme: light) {
    :root[data-theme='auto'] & {
      background-image: url('data:image/svg+xml;charset=utf-8,#{$light-svg}');
    }
  }

  :root[data-theme='dark'] & {
    background-image: url('data:image/svg+xml;charset=utf-8,#{$dark-svg}');
  }

  @media (prefers-color-scheme: dark) {
    :root[data-theme='auto'] & {
      background-image: url('data:image/svg+xml;charset=utf-8,#{$dark-svg}');
    }
  }
}

.options label[for='on-circular']::before {
  content: '';
  @include themed-background-svg(
    '<svg fill="currentColor" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z"/><path d="M0 0h24v24H0z" fill="none"/></svg>'
  );
}

.options label[for='quotes']::before {
  content: '';
  @include themed-background-svg(
    '<svg fill="currentColor" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z"/><path d="M0 0h24v24H0z" fill="none"/></svg>'
  );
}

.options label[for='indentation']::before {
  content: '';
  @include themed-background-svg(
    '<svg fill="currentColor" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z"/><path d="M0 0h24v24H0z" fill="none"/></svg>'
  );
}

.options input[type='checkbox'] + label::before {
  content: '';
  width: 1.5em;
  height: 1em;
  margin-top: -0.15em;
  margin-right: 0.35em;
  margin-bottom: 0;
  @include themed-background-svg(
    '<svg fill="currentColor" height="18" viewBox="0 0 24 24" width="18" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',
    $light-color: 'FF5C56',
    $dark-color: 'FF3333'
  );
  display: inline-block;
  vertical-align: middle;
  line-height: 1;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.options input[type='checkbox']:checked + label::before {
  @include themed-background-svg(
    '<svg fill="currentColor" height="16" viewBox="0 0 24 24" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 0h24v24H0z" fill="none"/><path d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"/></svg>',
    $light-color: '2DAE58',
    $dark-color: 'bae67e'
  );
  background-size: 1.25em;
}

.options input[type='checkbox']:checked + label {
  background: var(--selected-background);
  color: var(--selected-text);
}

.show-all button {
  padding: 0.6em 1em;
  overflow: hidden;
  text-indent: -999em;
  width: 1em;
  box-sizing: content-box;
  @include themed-background-svg(
    '<svg fill="currentColor" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z"/><path d="M0-.75h24v24H0z" fill="none"/></svg>',
    $light-color: 'a8a8a8',
    $dark-color: '606573'
  );
  background-position: center;
  background-repeat: no-repeat;
  background-size: 1.5em;
}

.show-all.active button {
  @include themed-background-svg(
    '<svg fill="currentColor" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z"/><path d="M0 0h24v24H0z" fill="none"/></svg>',
    $light-color: '4a5263',
    $dark-color: '9ba0af'
  );
}

code {
  font-family: 'JetBrains Mono Variable', 'Fira Code', 'Roboto Mono', Consolas,
    monospace;
  font-weight: 350;
  font-size: inherit;
}

label code {
  background: var(--background-shade);
  padding: 0.1em 0.2em;
  border-radius: 3px;
  font-family: 'JetBrains Mono Variable', 'Fira Code', 'Roboto Mono', Consolas,
    monospace;
  font-weight: 350;
  font-size: 0.8em;
}

.editors {
  flex-grow: 1;
  display: flex;
}

.input:not(#input) {
  z-index: 10;
  grid-area: input;
  min-height: 0;
}

.output:not(#output) {
  grid-area: output;
  min-height: 0;
  border-top: 1px solid var(--borders);

  @media (min-width: 1024px) {
    border-top: none;
    border-left: 1px solid var(--borders);
  }
}

#input,
#output {
  // opacity: 0;
  height: 100%;
}

#output .cm-lineNumbers {
  visibility: hidden;
}

.cm-editor {
  height: 100%;
}

.options > span.hidden.force-view {
  display: block;
  position: absolute;
  right: 0;
  z-index: 999;
  border: none;
}

.options > span.hidden.force-view label {
  display: block;
  background: var(--background-shade);
  box-sizing: border-box;
}

.options > span.hidden.force-view {
  border-right: 1px solid var(--borders);
  border-left: 1px solid var(--borders);
  border-bottom-color: var(--borders);
  border-bottom-width: 1px;
}

#sandbox {
  position: fixed;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  border: none;
  opacity: 0;
  z-index: -1;
}
